{"version":3,"file":"popup.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNa;;AAEQ;;AAErB;AACA;AACA;AACA,GAAG;;AAEH;AACA,wBAAwB,mCAAmC;AAC3D;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://sit-timetable/./src/popup.css?b447","webpack://sit-timetable/webpack/bootstrap","webpack://sit-timetable/webpack/runtime/make namespace object","webpack://sit-timetable/./src/popup.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\"use strict\";\n\nimport \"./popup.css\";\n\n(function () {\n  document.getElementById(\"extractBtn\").addEventListener(\"click\", () => {\n    extractTimetable();\n  });\n\n  function extractTimetable() {\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      const tab = tabs[0];\n\n      chrome.tabs.sendMessage(\n        tab.id,\n        {\n          type: \"EXTRACT\",\n        },\n        (response) => {\n          console.log(\"Current count value passed to contentScript file\");\n        }\n      );\n    });\n  }\n\n  chrome.runtime.sendMessage(\n    {\n      type: \"GREETINGS\",\n      payload: {\n        message: \"Hello, my name is Pop. I am from Popup.\",\n      },\n    },\n    (response) => {\n      console.log(response.message);\n    }\n  );\n})();\n"],"names":[],"sourceRoot":""}